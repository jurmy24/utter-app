from flask import Blueprint, request, jsonify
from flaskapp.services.transcription_service import transcribe_audio
from flaskapp.services.chat_generation_service import dialogue_with_openai
from flaskapp.services.speech_synthesis_service import synthesize_speech_with_polly
from flaskapp.services.message_history_service import get_message_history, update_message_history

message_blueprint = Blueprint('message_api', __name__)

@message_blueprint.route('/message', methods=['POST'])
def handle_message():
    # Extract audio file from the request
    audio_file = request.files.get('audio')

    # Transcribe the audio file
    transcription = transcribe_audio(audio_file)

    # Get a reply from OpenAI based on the transcription
    openai_reply = dialogue_with_openai(transcription)

    # Synthesize the OpenAI reply into speech
    speech_file = synthesize_speech_with_polly(openai_reply)

    # Update message history
    update_message_history({'transcription': transcription, 'reply': openai_reply})

    # Return transcription, OpenAI's reply, and speech file URL to the app
    return jsonify({
        'transcription': transcription,
        'reply': openai_reply,
        # Assume speech_file is a URL to the audio file generated by Amazon Polly
        'speech_file_url': speech_file
    })

